#SUFIX=env
SUFIX=sample
RSG=iot-edge-101-$SUFIX-rsg
HUB=iot-hub-101-$SUFIX

az group create --name $RSG --location westeurope

az iot hub create --resource-group $RSG --name iot-hub-101-$SUFIX --sku S1 --partition-count 2

az iot hub device-identity create --device-id edge101 --edge-enabled --hub-name $HUB --resource-group $RSG

az iot hub device-identity connection-string show --device-id edge101 --hub-name $HUB --resource-group $RSG

az deployment group create \
--resource-group $RSG \
--template-uri "https://raw.githubusercontent.com/Azure/iotedge-vm-deploy/1.4/edgeDeploy.json" \
--parameters dnsLabelPrefix='edge101vm-'$SUFIX \
--parameters adminUsername='azureUser' \
--parameters deviceConnectionString=$(az iot hub device-identity connection-string show --device-id edge101 --hub-name $HUB --resource-group $RSG -o tsv) \
--parameters authenticationType='password' \
--parameters adminPasswordOrKey="vmPass#word"

NSG_NAME=$(az network nsg list -g $RSG --query "[].name" -o tsv)
az network nsg rule create --name AllowSSH_2223 --nsg-name $NSG_NAME --priority 2000 --resource-group $RSG --access Allow --source-port-ranges 0-65535 --destination-port-ranges 2223  --direction Inbound --protocol Tcp

VM_NAME=$(az vm list -g $RSG --query "[].name" -o tsv)
az vm run-command invoke -g $RSG  -n $VM_NAME --command-id RunShellScript --scripts "sudo sed -i -e 's/#Port 22/Port 2223/' /etc/ssh/sshd_config"
az vm run-command invoke -g $RSG  -n $VM_NAME --command-id RunShellScript --scripts "sudo cat /etc/ssh/sshd_config"
az vm run-command invoke -g $RSG  -n $VM_NAME --command-id RunShellScript --scripts "sudo systemctl restart ssh"


ssh -p 2223 azureUser@edge101vm-$SUFIX.westeurope.cloudapp.azure.com

############################
##### DEMO STARTS HERE #####
############################
#Verify IoT Edge is up & running
sudo iotedge system status

sudo iotedge list

>> PORTAL: Deploy Simulated Temperature Module
>> Once Configured


sudo iotedge list

sudo iotedge logs SimulatedTemperatureSensor -f

>> IN OTHER CLI NOT THE EDGE VM: az iot hub monitor-events --output table -d edge101 -n iot-hub-101-sample -g iot-edge-101-sample-rsg

## SHOW PRODUCTION WARNINGS AND FIX FIRST AND SECOND

sudo iotedge check

sudo iotedge check --verbose

sudo vim /etc/docker/daemon.json

{
        "dns": ["1.1.1.1"],
        "log-driver": "local",
        "log-opts":{
                "max-size": "10m",
                "max-file": "3"
        }
}

sudo systemctl restart docker

sudo iotedge logs edgeAgent -f

sudo iotedge list

sudo iotedge check --verbose


## FIX THIRD AND FOURTH WARNING

#mkdir /tmp/edgeAgent
#mkdir /tmp/edgeHub

ls -la /tmp

mkdir /tmp/edgeTempSensor

--> Set ownership to azureUser
sudo chown 1000 /tmp/edgeTempSensor 

--> Set Permissions r/w
sudo chmod 700 /tmp/edgeTempSensor 

>> PORTAL: CONFIGURE EDGE AGENT AND EDGE HUB MODULES STORAGE FOLDERS


>> edgeAgent

{
    "HostConfig":{
        "Binds":[
            "/tmp:/tmp/storage"
        ]
    }
}

>> edgeHub

            "Binds":[
                "/tmp:/tmp/storage"
            ],

>> tempSensor

{
    "HostConfig":{
        "Binds":[
            "/tmp/edgeTempSensor:/tmp/storage"
        ]
    }
}


sudo iotedge check

>> Review directory contents
ls -la /tmp
ls -la /tmp/edgeAgent
sudo ls -la /tmp/edgeAgent/edgeAgent
sudo ls -la /tmp/edgeHub/edgeHub
ls -la /tmp/tempSensor



